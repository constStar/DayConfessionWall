<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.conststar.wall.dao.AdminLogDao">

    <select id="all" resultType="LogDomain">
        select log.*,user.name as user_name
        from `log`,`user`
        where `log`.user_id=`user`.id;
    </select>


    <insert id="addLog">
        insert into log(action, data, user_id, create_time)
        values (#{action}, #{data}, #{userId}, datetime(CURRENT_TIMESTAMP, 'localtime'));
    </insert>

    <select id="getLogs" resultType="LogDomain">
        select log.*,`user`.name as user_name
        from `log`,`user`
        where `log`.user_id=`user`.id
        order by `log`.${rankName}
        <if test="rankType == false">
            DESC
        </if>
        limit #{startIndex}, #{pageSize};
    </select>

    <select id="getLogCount" resultType="_int">
        select count(`id`)
        from `log`;
    </select>

    <select id="getSearchLogs" resultType="LogDomain">
        select log.*,`user`.name as user_name
        from `log`,`user`
        where `log`.user_id =`user`.id
        and ( `log`.action like '%' || #{keyword} || '%'
        or `log`.data like '%' || #{keyword} || '%'
        or `log`.user_id like '%' || #{keyword} || '%')
        order by `log`.${rankName}
        <if test="rankType == false">
            DESC
        </if>
        limit #{startIndex}, #{pageSize};
    </select>

    <select id="getSearchLogCount" resultType="_int">
        select count(`id`)
        from `log`
        where  `log`.action like '%' || #{keyword} || '%'
           or `log`.data like '%' || #{keyword} || '%'
           or `log`.user_id like '%' || #{keyword} || '%';
    </select>


    <delete id="clearLog">
        delete
        from log
        where id <![CDATA[<=]]> (select max(id) - #{logMaxNumber} from log);
    </delete>
</mapper>